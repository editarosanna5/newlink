{"version":3,"sources":["fonts/Roboto-Regular.ttf","fonts/Roboto-Thin.ttf","fonts/ethnocentric rg.ttf","components/LoadingComponent.js","shared/baseUrl.js","components/HeaderComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/HowToUseComponent.js","components/LocationDetailComponent.js","components/NavigationComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/locations.js","redux/comments.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","className","baseUrl","reactBaseUrl","Header","id","Component","RenderMenuItem","location","to","_id","width","src","image","alt","name","style","color","Menu","props","onchange","e","setState","search","target","value","state","bind","this","menu","locations","filter","toLowerCase","indexOf","map","key","isLoading","errMess","label","placeholder","onChange","fontFamily","paddingBottom","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","console","log","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","textAlign","href","role","model","onSubmit","htmlFor","md","text","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","HowToUse","tag","left","middle","object","body","heading","CommentForm","isModalOpen","toggleModal","postComment","locationId","rating","author","comment","outline","onClick","isOpen","toggle","RenderLocation","in","transfromProps","exitTransform","top","description","RenderComments","comments","returnedComm","Intl","DateTimeFormat","year","month","day","format","Date","parse","createdAt","editing","starCount","fontStyle","LocationDetail","percentage","capacity","imgUrl","colorPath","class","styles","buildStyles","pathColor","textColor","Navigation","isNavOpen","Fragment","dark","navbar","activeStyle","fontWeight","locationsLoading","locationsFailed","errmess","payload","addLocations","commentsFailed","addComments","Main","fetchLocations","fetchComments","classNames","timeout","exact","path","component","match","params","commentsErrMess","withRouter","connect","dispatch","newComment","date","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","alert","newFeedback","actions","reset","Locations","action","Comments","concat","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","loading","fakeRequest","Promise","resolve","setTimeout","el","document","querySelector","remove","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6253db39.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Roboto-Regular.11eabca2.ttf\";","module.exports = __webpack_public_path__ + \"static/media/Roboto-Thin.321de678.ttf\";","module.exports = __webpack_public_path__ + \"static/media/ethnocentric rg.843e6c09.ttf\";","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://192.168.100.10:5000/';\r\nexport const reactBaseUrl = 'http://192.168.100.10:3000/';","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\" id=\"title\">\r\n                    <div className=\"col-12\">\r\n                        <h2 id=\"productName\">NEWLINK</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Input} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport Header from './HeaderComponent';\r\n\r\nfunction RenderMenuItem ({location}){\r\n    return (\r\n        <Card>\r\n            <Link to={`/home/${location._id}`} >\r\n                <CardImg width=\"100%\" src={baseUrl + location.image} alt={location.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle style={{color:\"white\"}}>{location.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\nclass Menu extends Component{ \r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            search:\"\"\r\n        }\r\n        this.onchange=this.onchange.bind(this);\r\n    }\r\n    \r\n    onchange = e => {\r\n        this.setState({ search : e.target.value });\r\n      }\r\n    \r\n    render(){\r\n        const { search } = this.state;\r\n        const filteredLocations = this.props.locations.locations.filter(location => {\r\n            return location.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n        });\r\n        \r\n        \r\n        const menu = filteredLocations.map((location) => {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\" key={location._id}>\r\n                    <RenderMenuItem location={location}/>\r\n                </div>\r\n            );\r\n        });\r\n\r\n        if(this.props.locations.isLoading) {\r\n            return(\r\n                <div className=\"container\" id=\"page\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else if(this.props.locations.errMess){\r\n            return(\r\n                <div className=\"container\" id=\"page\">\r\n                    <div className=\"row\">\r\n                        <h4>{this.props.locations.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else\r\n            return (\r\n                <div className=\"container\" id=\"page\">\r\n                    <Header />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"heading\">Cari Mal</h3>\r\n                            <Input label=\"Search Mall\" placeholder=\"&#xF002;\" onChange={this.onchange}\r\n                            style={{fontFamily: \"FontAwesome\"}}/>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>    \r\n                    <div className=\"row\" style={{paddingBottom:\"100px\"}}>\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport {  Button, Label, Col, Row} from 'reactstrap';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9.%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values){\r\n        console.log(\"Current State is: \"+JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"container\" id=\"page\">\r\n                <Header />\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h3 className=\"heading\">Tentang Kami</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h4>Sejarah Kami</h4>\r\n                        <p style={{textAlign:\"justify\"}}>\r\n                            Dimulai pada tahun 2020, NewLink diciptakan untuk meningkatkan pengunjung pada mal.\r\n                            Pada tahun tersebut, dunia dilanda oleh pandemi Covid-19 yang menyebabkan perekonomian dunia melesu\r\n                            dan hal ini juga berdampak pada perekonomian Indonesia. Oleh sebab itu, dibuat sebuah sistem yang\r\n                            dapat melakukan monitoring jumlah pengunjung pada mal tersebut agar masyarakat dapat mengetahui\r\n                            informasi jumlah pengunjung pada mal tersebut supaya mereka mengetahui apakah aman untuk mengunjungi\r\n                            mal tersebut.\r\n                        </p>\r\n                        <p style={{textAlign:\"justify\"}}>\r\n                            Aplikasi terintegrasi dengan sistem hardware yang diletakkan pada pintu masuk dan keluar dari mal.\r\n                            Setiap kali ada pengunjung yang masuk/keluar dari mal tersebut akan diproses oleh kami dan ditampilkan\r\n                            pada aplikasi ini. Dengan adanya aplikasi ini, diharapkan bahwa masyarakat Indonesia dapat mengunjungi\r\n                            kembali mal seperti pada keadaan normal.\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <h4>Informasi Lokasi</h4>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4\">\r\n                            <h5>Alamat Kami</h5>\r\n                            <address>\r\n                            Jl. Ganesha no 10<br />\r\n                            Bandung Utara<br />\r\n                            Banten<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:newlink@gmail.com\">newlink@gmail.com</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\" id=\"form\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Kirimkan Kami Tanggapan Anda</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\".firstname\" md={2}>Nama Depan</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"Nama Depan\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15)\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters ',\r\n                                            maxLength: 'Must be 15 characters or less '\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Nama Belakang</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Nama Belakang\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15)\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters ',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Nomor Telepon</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Nomor Telepon\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3),maxLength:maxLength(15),isNumber\r\n                                        }}/>\r\n                                     <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 numbers ',\r\n                                            maxLength: 'Must be 15 numbers or less ',\r\n                                            isNumber: 'Must be a number '\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            validEmail: 'Invalid Email Address '\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                />{' '}\r\n                                                <strong> Apakah kami dapat mengontak Anda?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                            <option>Tel.</option>\r\n                                            <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Tanggapan Anda</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required\r\n                                        }}/>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".message\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset:2}}>\r\n                                    <Button type=\"submit\" className=\"buttonSubmit\">\r\n                                        Kirim Tanggapan\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );    \r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Media } from 'reactstrap';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { reactBaseUrl } from '../shared/baseUrl';\r\nimport Header from './HeaderComponent';\r\n\r\nfunction HowToUse() {\r\n\r\n    return(\r\n        <div className=\"container\" id=\"page\">\r\n            <Header />\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h3 className=\"heading\">Petunjuk Pemakaian</h3>\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\" >\r\n                    <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src=\"assets/images/Logo.png\" alt=\"Step 1\" id=\"howtouseComp\"/>\r\n                        </Media>\r\n                        <Media body className=\"ml-5 steps\">\r\n                            <Media heading id=\"mediaHeading\">\r\n                                <img src={reactBaseUrl + \"assets/images/number-1.png\"} alt=\"one\" id=\"imgNumber\"/>\r\n                                Step 1\r\n                            </Media>\r\n                            <p id=\"paraContent\">Buka aplikasi NewLink. Tampilan beranda akan muncul pertama kali Anda mengakses aplikasi NewLink</p>\r\n                        </Media>\r\n                    </Media>    \r\n                    <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src=\"assets/images/Logo.png\" alt=\"Step 2\" id=\"howtouseComp\"/>\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading id=\"mediaHeading\">\r\n                                <img src={reactBaseUrl + \"assets/images/number-2.png\"} alt=\"two\" id=\"imgNumber\"/>\r\n                                Step 2\r\n                            </Media>\r\n                            <p id=\"paraContent\">Anda dapat melakukan pencarian mal pada halaman beranda atau dapat melakukan pencarian dengan menggunakan bilah pencarian.</p>\r\n                        </Media>\r\n                    </Media>\r\n                    <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src=\"assets/images/Logo.png\" alt=\"Step 3\" id=\"howtouseComp\"/>\r\n                        </Media>\r\n                        <Media body className=\"ml-5 steps\">\r\n                            <Media heading id=\"mediaHeading\">\r\n                                <img src={reactBaseUrl + \"assets/images/number-3.png\"} alt=\"three\" id=\"imgNumber\"/>\r\n                                Step 3\r\n                            </Media>\r\n                            <p id=\"paraContent\">Klik pada mal yang ingin dikunjungi dan akses informasi yang tersedia untuk mengetahui kapasitas dari mal tersebut.</p>\r\n                        </Media>\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HowToUse;    ","import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Button, Modal, ModalHeader,ModalBody,Label,Col,Row} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { reactBaseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\nimport Header from './HeaderComponent';\r\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length<=len);\r\nconst minLength = (len) => (val) => (val) && (val.length>=len); \r\n\r\nclass CommentForm extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.locationId,values.rating,values.author,values.comment);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"row\" style={{paddingBottom:\"150px\"}}>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-edit fa-lg\"></span>Submit Comment\r\n                </Button>          \r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Label htmlFor=\".rating\">Rating</Label>\r\n                            <Row className=\"form-group\">    \r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\"\r\n                                        >\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Label htmlFor=\"author\">Your Name</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength:minLength(3), maxLength:maxLength(15)\r\n                                        }}/>\r\n                                    <Errors className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Label htmlFor=\"comment\">Comment</Label>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" name=\"comment\" rows=\"6\"\r\n                                    className=\"form-control\"\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={10}>\r\n                                    <Button type=\"submit\" color=\"primary\">Submit</Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderLocation({location}) {\r\n    if (location != null) {\r\n        return(\r\n            <FadeTransform in\r\n                transfromProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card id=\"description\">\r\n                    <CardImg top src={baseUrl + location.image} alt={location.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{location.name}</CardTitle>\r\n                        <CardText>{location.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }else{\r\n        return(\r\n            <div></div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction RenderComments({comments,postComment, locationId}) {\r\n    \r\n    let returnedComm = comments.map(comment => {\r\n        return (\r\n            <Fade in>\r\n                <li key={comment._id}>\r\n                    <p>{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.createdAt)))}</p>\r\n                    <StarRatingComponent name=\"rating\" editing={false} starCount={5} value={comment.rating}/>\r\n                    <p style={{fontStyle:\"italic\"}}>\"{comment.comment}\"</p>    \r\n                </li>\r\n            </Fade>\r\n        );\r\n    }) \r\n    if (comments != null){\r\n        return(\r\n            <div>\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    <Stagger in>\r\n                        {returnedComm}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm locationId={locationId} postComment={postComment}/> \r\n            </div>\r\n        );\r\n    } else\r\n        return(\r\n            <div></div>\r\n        );\r\n}\r\n\r\nconst LocationDetail = (props) => { \r\n    if(props.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if(props.errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else\r\n    if(props.location!=null){\r\n        const percentage = props.location.capacity;\r\n        let imgUrl=\"\";\r\n        let colorPath=\"\";\r\n        let sizeText=\"\";\r\n        if(percentage<=40){\r\n            imgUrl=\"assets/images/safe.png\";\r\n            colorPath=\"#00e640\";\r\n        } else if (percentage>40 && percentage<=75) {\r\n            imgUrl=\"assets/images/moderate.png\";\r\n            colorPath=\"#ffcb05\";\r\n        } else if (percentage>75 && percentage <=100) {\r\n            imgUrl=\"assets/images/crowded.png\";\r\n            colorPath=\"#dd2c00\";\r\n        }\r\n        return (\r\n            <div class=\"container\">\r\n                <Header />\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3 className=\"heading\">{props.location.name}</h3>\r\n                            <hr/>\r\n                        </div>\r\n                    </div>    \r\n                <div className=\"row\">\r\n                    <div className=\"col-12 md-7 m-1\">\r\n                        <RenderLocation location = {props.location}/>\r\n                        <div className=\"percentage-bar\">\r\n                            <CircularProgressbar value={percentage} text={`${percentage}%`}\r\n                             styles={buildStyles({\r\n                                pathColor: colorPath,\r\n                                textColor: colorPath,\r\n                             })}/>\r\n                            <img src={reactBaseUrl + imgUrl} alt=\"percentage\" id=\"imgPercentage\"/>\r\n                        </div>\r\n                        <p style={{textAlign:\"center\"}} id=\"padatMal\">Kepadatan Mal (%)</p>\r\n                        <RenderComments comments = {props.comments}\r\n                            postComment={props.postComment}\r\n                            locationId={props.location._id}/> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n        \r\n    } else {\r\n        return (<div></div>);\r\n    }\r\n}\r\n\r\n\r\nexport default LocationDetail;","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavbarToggler,NavItem, Jumbotron, Button, Modal, ModalHeader,ModalBody, Form, FormGroup, Input,Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { findByPlaceholderText } from '@testing-library/react';\r\n\r\nclass Navigation extends Component {\r\n    \r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark className=\"navbar fixed-bottom\">\r\n                    <div className=\"container d-flex flex-row justify-content-around w-100\">\r\n                        <Nav navbar>\r\n                            <NavItem className=\"textMenu\">\r\n                                <NavLink className=\"nav-link\" to=\"/how-to-use\" activeStyle={{color:'white',fontWeight:'bold'}}>\r\n                                    <div className=\"row d-flex flex-column justify-content-center align-items-center\">\r\n                                        <div className=\"fa fa-question-circle fa-2x\"></div>\r\n                                        <div>Petunjuk</div>\r\n                                    </div> \r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav navbar>\r\n                            <NavItem className=\"textMenu\">\r\n                                <NavLink className=\"nav-link\" to=\"/home\" activeStyle={{color:'white',fontWeight:'bold'}}> \r\n                                    <div className=\"row d-flex flex-column justify-content-center align-items-center\">\r\n                                        <div className=\"fa fa-home fa-2x\"></div>\r\n                                        <div>Beranda</div>\r\n                                    </div> \r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav navbar>\r\n                            <NavItem className=\"textMenu\">\r\n                                <NavLink className=\"nav-link\" to=\"/about\" activeStyle={{color:'white',fontWeight:'bold'}}>\r\n                                    <div className=\"row d-flex flex-column justify-content-center align-items-center\">\r\n                                        <div className=\"fa fa-info-circle fa-2x\"></div>\r\n                                        <div>Tentang</div>\r\n                                    </div> \r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (locationId,rating,author,comment) => (dispatch) => {\r\n    const newComment = {\r\n        locationId: locationId,\r\n        rating:rating,\r\n        author:author,\r\n        comment:comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method:'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addComment(response)))\r\n        .catch(error => { console.log('Post comments ',error.message);\r\n        alert('Your comment could not be posted\\nError: '+error.message);\r\n    });\r\n        \r\n}\r\n\r\nexport const fetchLocations = () => (dispatch) => {\r\n    dispatch(locationsLoading(true));\r\n\r\n    return fetch(baseUrl + 'home')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(locations => dispatch(addLocations(locations)))\r\n        .catch(error => dispatch(locationsFailed(error.message)));\r\n}\r\n\r\nexport const locationsLoading = ()=> ({\r\n    type: ActionTypes.LOCATIONS_LOADING\r\n});\r\n\r\nexport const locationsFailed = (errmess) => ({\r\n    type: ActionTypes.LOCATIONS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLocations = (locations) => ({\r\n    type: ActionTypes.ADD_LOCATIONS,\r\n    payload: locations\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })    \r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname:lastname,\r\n        telnum:telnum,\r\n        email:email,\r\n        agree:agree,\r\n        contactType: contactType,\r\n        message:message\r\n    }\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'about', {\r\n        method:'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers:{\r\n            'Content-Type':'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(response => {\r\n            if (response.ok){\r\n                return response;\r\n            } else {\r\n                var error =  new Error('Error '+response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(response => {dispatch(addFeedback(response));\r\n        alert('Thank you for your feedback!\\n'+JSON.stringify(response))})\r\n        .catch(error => { console.log('Post feedback ',error.message);\r\n        alert('Your Feedback could not be posted\\nError: '+error.message);\r\n    });\r\n        \r\n}\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const LOCATIONS_LOADING = 'LOCATIONS_LOADING';\r\nexport const LOCATIONS_FAILED = 'LOCATIONS_FAILED';\r\nexport const ADD_LOCATIONS = 'ADD_LOCATIONS';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport HowToUse from './HowToUseComponent';\r\nimport LocationDetail from './LocationDetailComponent';\r\nimport Navigation from './NavigationComponent';\r\nimport { Switch, Route, Redirect , withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchLocations,fetchComments,postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    locations: state.locations,\r\n    comments: state.comments\r\n  }   \r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (locationId, rating, author, comment) => dispatch(postComment(locationId, rating, author, comment)),\r\n  fetchLocations: () => {dispatch(fetchLocations())},\r\n  postFeedback: (firstname,lastname,telnum,email,agree,contactType,message) => dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message)),\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())}\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.fetchLocations();\r\n    this.props.fetchComments();\r\n  }\r\n\r\n \r\n\r\n  render() {\r\n\r\n    const LocationWithId = ({match})=>{\r\n      return(\r\n        <LocationDetail location={this.props.locations.locations.filter((location)=>location._id === match.params.locationId)[0]}\r\n        isLoading={this.props.locations.isLoading}\r\n        errMess={this.props.locations.errMess}\r\n        comments={this.props.comments.comments.filter((comment)=>comment.locationId === match.params.locationId)}\r\n        commentsErrMess={this.props.comments.errMess}\r\n        postComment={this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div id=\"page\">\r\n        <Navigation />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route exact path=\"/home\" component={() => <Menu locations={this.props.locations}/>}/>\r\n              <Route path=\"/home/:locationId\" component={LocationWithId}/>\r\n              <Route exact path=\"/about\" component={() =><Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}/>\r\n              <Route exact path=\"/how-to-use\" component={() => <HowToUse/>}/>\r\n              <Redirect to=\"/home\"/>\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Locations = (state = {\r\n        isLoading: true, \r\n        errMess: null,\r\n        locations: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LOCATIONS:\r\n            return {...state, isLoading:false, errMess:null, locations: action.payload};\r\n\r\n        case ActionTypes.LOCATIONS_LOADING:\r\n            return {...state, isLoading:true, errMess:null, locations: []};\r\n\r\n        case ActionTypes.LOCATIONS_FAILED:\r\n            return {...state, isLoading:false,errMess:action.payload,locations:[]};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch(action.type){\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading:false, errMess:null, comments: action.payload};\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading:false,errMess:action.payload,comments:[]};\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname:'',\r\n    lastname:'',\r\n    telnum:'',\r\n    email:'',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message:''\r\n}","import React, { Component } from 'react';\r\n\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n  state ={\r\n    loading:true\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.fakeRequest().then(() => {\r\n      const el = document.querySelector(\".loader-container\");\r\n      if (el) {\r\n        el.remove();  // removing the spinner element\r\n        this.setState({ loading: false }); // showing the app\r\n      }\r\n    });\r\n  }\r\n\r\n  fakeRequest = () => {\r\n    return new Promise(resolve => setTimeout(() => resolve(), 2500));\r\n  };\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return null; //app is not ready (fake request is in process)\r\n    }\r\n\r\n    return (\r\n      <Provider store = {store}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Locations } from './locations';\r\nimport { Comments } from './comments';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            locations: Locations,\r\n            comments: Comments,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './fonts/Roboto-Regular.ttf';\r\nimport './fonts/Roboto-Thin.ttf';\r\nimport './fonts/ethnocentric rg.ttf';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}